
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Admins have full access to their own collection
    match /admins/{adminId} {
      allow read, write: if request.auth != null && request.auth.uid == adminId;
    }
     match /admins/{adminId} {
      allow read: if request.auth != null;
    }
     // Caterers have full access to their own collection
    match /caterers/{catererId} {
      allow read, write: if request.auth != null && request.auth.uid == catererId;
    }
     match /caterers/{catererId} {
      allow read: if request.auth != null;
    }
    
    // Users can read/write their own profile
    // Admins can read/write any user profile
    match /users/{userId} {
      allow read, write: if request.auth != null && (request.auth.uid == userId || exists(/databases/$(database)/documents/admins/$(request.auth.uid)));
    }
     // Any authenticated user can create a meal (caterers)
    match /meals/{mealId} {
      allow create: if request.auth.uid != null;
      allow read: if true;
      allow update, delete: if request.auth.uid != null && request.auth.uid == resource.data.createdBy;
    }
     // Any authenticated user can create an order (clients)
    match /orders/{orderId} {
      allow create: if request.auth.uid != null;
      allow read: if request.auth.uid != null;
      allow update: if request.auth.uid != null && (request.auth.uid in resource.data.catererIds);
    }
  }
}

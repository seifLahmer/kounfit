
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Admins: Only other admins can read/write (for simplicity, we'll allow any auth user to read for now)
    match /admins/{adminId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == adminId;
    }

    // Caterers: Only admins can create/delete, caterer can update their own data
    match /caterers/{catererId} {
      allow read: if request.auth != null;
      // Allow create/delete for admins, update for the specific caterer
      allow write: if request.auth != null && (get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.role == 'admin' || request.auth.uid == catererId);
    }
    
    // Users (Clients): Can read/write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Meals: Readable by any authenticated user. Writable only by the caterer who created it or an admin.
    match /meals/{mealId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && (get(/databases/$(database)/documents/caterers/$(request.auth.uid)).exists || get(/databases/$(database)/documents/admins/$(request.auth.uid)).exists);
      allow update, delete: if request.auth != null && (resource.data.createdBy == request.auth.uid || get(/databases/$(database)/documents/admins/$(request.auth.uid)).exists);
    }
    
    // Orders: Clients can create their own. Caterers and Admins can read them.
    match /orders/{orderId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.clientId || get(/databases/$(database)/documents/admins/$(request.auth.uid)).exists || request.auth.uid in resource.data.catererIds);
      allow create: if request.auth != null && request.auth.uid == request.resource.data.clientId;
      allow update: if request.auth != null && (get(/databases/$(database)/documents/admins/$(request.auth.uid)).exists || request.auth.uid in resource.data.catererIds);
    }
    
    // Notifications: Only readable/writable by the target user.
    match /notifications/{notificationId} {
        allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }
  }
}

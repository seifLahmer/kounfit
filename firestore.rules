
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // Users: Can create their own profile, can only read/update their own profile.
    match /users/{userId} {
      allow create: if request.auth != null;
      allow read, update: if request.auth != null && request.auth.uid == userId;
      // Let admins also read user data
      allow get: if request.auth != null && exists(/databases/$(database)/documents/admin/$(request.auth.uid));
    }

    // Role collections: Allow any authenticated user to read their own doc to check roles.
    // This is secure because roleService queries by the user's own UID.
    match /admin/{uid} {
      allow get: if request.auth != null && request.auth.uid == uid;
      allow list: if request.auth != null && exists(/databases/$(database)/documents/admin/$(request.auth.uid));
    }

    match /traiteur/{uid} {
      allow get: if request.auth != null && request.auth.uid == uid;
       allow list, create, update: if request.auth != null && exists(/databases/$(database)/documents/admin/$(request.auth.uid));
    }
    
    // Meals: All authenticated users can read. Only admins can write/delete.
    match /meals/{mealId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null && exists(/databases/$(database)/documents/admin/$(request.auth.uid));
    }

    // Components: Only admins can read/write.
    match /components/{componentId} {
      allow read, write: if request.auth != null && exists(/databases/$(database)/documents/admin/$(request.auth.uid));
    }

    // Orders:
    // Clients can create their own orders.
    // Clients can only read their own orders.
    // Caterers and Admins can read all orders.
    // Caterers and Admins can update orders.
    match /orders/{orderId} {
      allow create: if request.auth != null && request.resource.data.clientId == request.auth.uid;
      allow read: if request.auth != null && (resource.data.clientId == request.auth.uid || exists(/databases/$(database)/documents/traiteur/$(request.auth.uid)) || exists(/databases/$(database)/documents/admin/$(request.auth.uid)));
      allow update: if request.auth != null && (exists(/databases/$(database)/documents/traiteur/$(request.auth.uid)) || exists(/databases/$(database)/documents/admin/$(request.auth.uid)));
    }
  }
}

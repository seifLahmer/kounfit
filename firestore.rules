rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    match /users/{userId} {
      // Allow users to create their own profile
      allow create: if request.auth.uid == userId;
      
      // Allow users to read their own profile, and admins to read any profile
      allow read: if request.auth.uid == userId || exists(/databases/$(database)/documents/admins/$(request.auth.uid));

      // Allow users to update and delete their own profile
      allow update, delete: if request.auth.uid == userId;
    }

    match /admins/{userId} {
        // Allow authenticated users to check if they are an admin
        allow get: if request.auth.uid == userId;
        
        // Allow admins to create other admins
        allow create: if exists(/databases/$(database)/documents/admins/$(request.auth.uid));

        // Allow admins to read/write any admin document
        allow read, write: if exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    match /caterers/{userId} {
        // Allow admins to manage caterers
        allow read, write, create: if exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    match /meals/{mealId} {
      // Allow any authenticated user to read meals
      allow read: if request.auth != null;
      
      // Allow caterers to create meals
      allow create: if request.auth.uid == request.resource.data.createdBy;
      
      // Allow caterers to update/delete their own meals
      allow update, delete: if request.auth.uid == resource.data.createdBy;
    }

    match /orders/{orderId} {
      // Allow clients to create their own orders
      allow create: if request.auth.uid == request.resource.data.clientId;
      
      // Allow clients to read their own orders
      allow read: if request.auth.uid == resource.data.clientId;
      
      // Allow caterers to update orders they are a part of
      allow update: if request.auth.uid in resource.data.catererIds;
    }
  }
}

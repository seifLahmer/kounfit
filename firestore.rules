
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only read/write their own data
    match /users/{userId} {
      allow read, update, delete: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
    }
    
    // Admins can read/write their own data
    match /admins/{adminId} {
       allow read, write: if request.auth.uid == adminId;
    }
    
    // Caterers can read/write their own data
    match /caterers/{catererId} {
       allow read, write: if request.auth.uid == catererId;
    }

    // Orders:
    // - Clients can create their own orders.
    // - Caterers and Admins can read orders they are involved in.
    // - Clients can read their own orders.
    match /orders/{orderId} {
      allow create: if request.auth.uid == request.resource.data.clientId;
      allow read: if request.auth.uid == resource.data.clientId 
                      || request.auth.uid in resource.data.catererIds
                      || get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.role == 'admin';
      allow update: if request.auth.uid in resource.data.catererIds
                       || get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Meals: Public read, but only caterers/admins can create/update/delete.
    match /meals/{mealId} {
      allow read: if true;
      allow create, update: if get(/databases/$(database)/documents/caterers/$(request.auth.uid)).data.role == 'caterer' 
                           || get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.role == 'admin';
      allow delete: if get(/databases/$(database)/documents/caterers/$(request.auth.uid)).data.role == 'caterer' 
                         && resource.data.createdBy == request.auth.uid
                         || get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.role == 'admin';
      
      // Allow any authenticated user to read and write their own rating.
      match /userRatings/{userId} {
        allow read: if true;
        allow write: if request.auth.uid == userId;
      }
    }
    
    // Notifications can only be accessed by the target user
    match /notifications/{notificationId} {
      allow read, write: if request.auth.uid == resource.data.userId;
    }
  }
}

rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users Collection: Users can only manage their own profile.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }
    
    // Roles collections: Read-only for authenticated users to check roles.
    match /admin/{userId} {
      allow get: if request.auth != null;
    }
    
    match /traiteur/{catererId} {
      allow get: if request.auth != null;
      allow list: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Meals Collection:
    // - Authenticated users can read meals.
    // - Caterers can create meals and manage only their own.
    match /meals/{mealId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'caterer';
      allow update, delete: if request.auth.uid != null && resource.data.createdBy == request.auth.uid;
    }
    
    // Orders Collection:
    // - Clients can create orders for themselves.
    // - Caterers and Admins can view orders.
    // - Only Caterers can update the status of orders containing their meals.
    match /orders/{orderId} {
      allow read: if request.auth.uid != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'caterer']);
      allow create: if request.auth.uid != null && request.resource.data.clientId == request.auth.uid;
      allow update: if request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'caterer';
    }
    
    // Notifications Collection: Users can only read their own notifications.
    match /notifications/{notificationId} {
      allow read: if request.auth.uid != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null; // Allow server-side functions/other rules to create notifications
    }
  }
}

rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin(userId) {
      return exists(/databases/$(database)/documents/admins/$(userId));
    }

    match /admins/{userId} {
      allow get: if request.auth.uid != null;
      allow list, write: if isAdmin(request.auth.uid);
    }

    match /caterers/{userId} {
      allow get: if request.auth.uid != null;
      allow list, write: if isAdmin(request.auth.uid);
    }

    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
      allow list: if isAdmin(request.auth.uid);
    }

    match /meals/{mealId} {
      allow read: if true;
      allow create: if request.auth.uid == request.resource.data.createdBy && exists(/databases/$(database)/documents/caterers/$(request.auth.uid));
      allow update, delete: if (resource.data.createdBy == request.auth.uid) || isAdmin(request.auth.uid);
    }
    
    match /orders/{orderId} {
      allow create: if request.auth.uid == request.resource.data.clientId;
      allow read: if request.auth.uid == resource.data.clientId || isAdmin(request.auth.uid) || request.auth.uid in resource.data.catererIds;
      allow update: if isAdmin(request.auth.uid) || request.auth.uid in resource.data.catererIds;
      allow list: if isAdmin(request.auth.uid);
    }

    match /notifications/{notificationId} {
        allow read, write: if request.auth.uid == resource.data.userId;
    }
  }
}

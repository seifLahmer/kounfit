
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to get the user's ID
    function getUid() {
      return request.auth.uid;
    }

    // Helper function to check if the user is an admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/admin/$(getUid()));
    }

    // Users (clients) can read/write their own profile, but not others'
    match /users/{userId} {
      allow read, update, delete: if isAuthenticated() && getUid() == userId;
      allow create: if isAuthenticated();
    }
    
    // Admins can read/write all user profiles
    match /users/{userId} {
      allow read, write: if isAdmin();
    }

    // Caterers can read/write their own profile
    match /caterers/{catererId} {
       allow read: if isAuthenticated();
       allow write: if isAdmin() || (isAuthenticated() && getUid() == catererId);
    }
    
    // Admins can manage the admin collection
    match /admin/{adminId} {
      allow read, write: if isAdmin();
    }

    // Meals can be read by any authenticated user.
    // Meals can only be created/updated/deleted by their creator (caterer) or an admin.
    match /meals/{mealId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated(); // Caterer creates
      allow update, delete: if isAdmin() || (isAuthenticated() && resource.data.createdBy == getUid());
    }

    // Orders can be read by the client who created them, the caterers involved, or an admin.
    // Orders can only be created by an authenticated client.
    // Orders can only be updated (e.g., status change) by a caterer or admin.
    match /orders/{orderId} {
      allow read: if isAuthenticated() && (
                    resource.data.clientId == getUid() || 
                    getUid() in resource.data.catererIds ||
                    isAdmin()
                  );
      allow create: if isAuthenticated() && request.resource.data.clientId == getUid();
      allow update: if isAuthenticated() && (getUid() in resource.data.catererIds || isAdmin());
      // Deleting orders is restricted to admins for record-keeping
      allow delete: if isAdmin();
    }
    
    // Notifications can be read/updated by the target user or an admin
    match /notifications/{notificationId} {
       allow read, update: if isAuthenticated() && (resource.data.userId == getUid() || isAdmin());
       // Notifications are created by the system (server-side functions or services)
       allow create, delete: if isAdmin();
    }
  }
}

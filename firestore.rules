rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAuth() {
      return request.auth.uid != null;
    }
    
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    function isCaterer() {
      return exists(/databases/$(database)/documents/caterers/$(request.auth.uid));
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    match /users/{userId} {
      allow read, update: if isOwner(userId) || isAdmin();
      allow create: if isAuth();
    }
    
    match /caterers/{catererId} {
      allow read: if isAuth();
      allow create, update, delete: if isAdmin();
    }
    
    match /admins/{adminId} {
      allow read, create, update, delete: if isAdmin();
    }

    match /meals/{mealId} {
      allow read: if isAuth();
      allow create: if isCaterer() || isAdmin();
      allow update, delete: if (isCaterer() && resource.data.createdBy == request.auth.uid) || isAdmin();
      
      match /userRatings/{userId} {
        allow create, update: if isOwner(userId);
        allow read: if isAuth();
      }
    }

    match /orders/{orderId} {
      allow create: if isAuth();
      allow read: if isOwner(resource.data.clientId) || isAdmin() || (isCaterer() && request.auth.uid in resource.data.catererIds);
      allow update: if (isCaterer() && request.auth.uid in resource.data.catererIds) || isAdmin();
    }
    
    match /notifications/{notificationId} {
      allow read, update: if isOwner(resource.data.userId);
    }
  }
}

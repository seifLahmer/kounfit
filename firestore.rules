rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isOwner(uid) {
      return request.auth.uid == uid;
    }
    
    function isAdmin() {
      // Safely check for admin claim. Returns false if the claim doesn't exist.
      return request.auth.token.get('admin', false) == true;
    }

    match /users/{userId} {
      allow create: if isOwner(userId);
      allow read, update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    match /caterers/{catererId} {
      allow read: if true; // Anyone can read caterer info
      allow create: if isOwner(catererId);
      allow update: if isOwner(catererId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    match /deliveryPeople/{deliveryPersonId} {
      allow read: if true; // Anyone can read delivery person info
      allow create: if isOwner(deliveryPersonId);
      allow update: if isOwner(deliveryPersonId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    match /admins/{adminId} {
        allow read, write: if isAdmin();
    }
    
    match /meals/{mealId} {
      allow read: if true; // Anyone can read meal details
      allow create, update: if request.auth.uid == request.resource.data.createdBy || isAdmin();
      allow delete: if request.auth.uid == resource.data.createdBy || isAdmin();

      // Allow any authenticated user to add/update their rating
      match /userRatings/{userId} {
        allow read, write: if isOwner(userId);
      }
    }
    
    match /orders/{orderId} {
      allow create: if request.auth.uid == request.resource.data.clientId;
      allow read, update: if request.auth.uid == resource.data.clientId
                         || request.auth.uid in resource.data.catererIds
                         || request.auth.uid == resource.data.deliveryPersonId
                         || isAdmin();
      allow delete: if isAdmin();
    }
    
    match /notifications/{notificationId} {
        allow read, update: if request.auth.uid == resource.data.userId;
        allow create: if true; // Allow services to create notifications
    }
  }
}
